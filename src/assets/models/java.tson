// Determines whether the server is online or offline.
// Is `false` only in the Offline scheme.
online: boolean = true
// The server's address information
address: object = {
  // The hostname of the server that was parsed from the address string.
  // Example if there were an SRV record.
  host: string = "play.hypixel.net"
  // The port of the server that was parsed from the address string.
  // Will be different if there was an SRV record and no port was specified.
  port: number = 25565
}
// Message Of The Day aka server's description.
motd: StringWithFormatting = {
  // The raw format, with Minecraft's formatting codes.
  minecraft: string
  // The plain format. There are no formatting codes, only plain text.
  plain: string
  // The HTML format. It's a string with HTML tags.
  // Note that it's wrapped in `<p>` tag, so you may want to remove it.
  html: string
  // ANSI 24-bit format aka format for colored text in the terminal.
  ansi: string
  // You may want to write other formats yourself, use underlying library
  // mcstatus for this. They have really powerful API for MOTD transformers.
  // https://github.com/py-mine/mcstatus
}
// Server's version information.
version: object = {
  // Human readable version name. It may contain formatting codes, so
  // it's parsed the same as it parses MOTD. It's sent by the server,
  // so expect that it can be modified.
  name: StringWithFormatting = {
    // See `motd` above for attribute descriptions here.
  }
  // Internal Minecraft protocol version.
  // See https://minecraft.fandom.com/wiki/Protocol_version#List_of_protocol_versions
  protocol: number = 47
}
// Info about the server's players that are currently online.
players: object = {
  // Current number of players that are on this server.
  online: number
  // Maximum number of players that can be on this server.
  max: number
  // List of players that are currently on this server.
  // Vanilla Minecraft server core limits it to 7 people.
  // Most of the major servers disable this feature, and instead
  // put there some ad. Can be not present, if server disabled
  // it completely.
  list: list of objects = [
    {
      // Name of the Player. If server replaced it with ad, there
      // will be formatting codes that are parsed the same as MOTD
      // is parsed.
      name: StringWithFormatting = {
        // See `motd` above for attribute descriptions here.
      }
      // The UUID of the player. Can be set to zeros if the server
      // use this list as ad. Don't expect to be it as something meaningful
      // on pirate servers.
      uuid: string
    }
  ]
}
// Base64 encoded favicon image. Can be not present if server
// doesn't have it.
icon: string
// Additional information about the server, that our parser didn't
// parse. It may not be a part of the official protocol, so don't
// expect it to be present.
additional: object
// Internal info that is not sent by the server.
// It's still a part of Public API and you are free to use it.
internal: object = {
  // The time when this server answer was cached on our side.
  // Can be different from the Cloudflare's cache time.
  // Look for theirs headers if you really want to know it.
  cached_at: number = 1645666816
  // The time, when this cache will expire.
  cache_ends_at: number = 1645667116
}
