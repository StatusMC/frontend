---
import { javaPart, bedrockPart, queryPart, offlinePart } from "~/components/status/test-response-objects";
import Layout from "~/layouts/PageLayout.astro";
import GetStatus from "~/components/widgets/GetStatus.astro";
import Collapsible from "~/components/widgets/Collapsible.astro";

import JavaEditionSection from "~/components/status/JavaEditionSection.astro";
import BedrockEditionSection from "~/components/status/BedrockEditionSection.astro";
import QuerySection from "~/components/status/QuerySection.astro";
import ErrorSectionReplacer from "~/components/status/ErrorSectionReplacer.astro";

export interface Props {
	ip: string;
}

const { ip }: Props = Astro.params;
const modules: string[] = (Astro.url.searchParams.get("modules")! || "").split(",");

const isOneModule = modules.length === 1;

const queryParams: { [key: string]: string } = {};
Astro.url.searchParams.forEach((value, key) => {
	if (!key.startsWith("to_")) return;
	queryParams[key] = value;
});

const statusResult = {};
if (modules.includes("java"))
	statusResult["java"] = queryParams["to_java"] === "offline" ? offlinePart : ip === "offline" ? offlinePart : javaPart;
if (modules.includes("bedrock"))
	statusResult["bedrock"] =
		queryParams["to_java"] === "offline" ? offlinePart : ip === "offline" ? offlinePart : bedrockPart;
if (modules.includes("query"))
	statusResult["query"] =
		queryParams["to_java"] === "offline" ? offlinePart : ip === "offline" ? offlinePart : queryPart;
---

<Layout>
	<GetStatus
		inputValues={{
			main: ip,
			java: queryParams["to_java"] || "",
			bedrock: queryParams["to_bedrock"] || "",
			query: queryParams["to_query"] || "",
		}}
		isChecked={{
			java: modules.includes("java"),
			bedrock: modules.includes("bedrock"),
			query: modules.includes("query"),
		}}
	/>
	<section class="mx-auto max-w-6xl px-4 pb-8 lg:px-8 lg:pb-20">
		<div
			class="rounded border-2 border-solid border-slate-300 bg-slate-50 p-5 text-black dark:border-slate-500 dark:bg-slate-800 dark:text-white"
		>
			{
				statusResult.java ? (
					<div class="my-3">
						<Collapsible title="Java Response" openByDefault={isOneModule}>
							{statusResult.java.online ? (
								<JavaEditionSection status={statusResult.java} />
							) : (
								<ErrorSectionReplacer status={statusResult.java} />
							)}
						</Collapsible>
					</div>
				) : null
			}
			{
				statusResult.bedrock ? (
					<div class="my-3">
						<Collapsible title="Bedrock Response" openByDefault={isOneModule}>
							{statusResult.bedrock.online ? (
								<BedrockEditionSection status={statusResult.bedrock} />
							) : (
								<ErrorSectionReplacer status={statusResult.bedrock} />
							)}
						</Collapsible>
					</div>
				) : null
			}
			{
				statusResult.query ? (
					<div class="my-3">
						<Collapsible title="Query Response" openByDefault={isOneModule}>
							{statusResult.query.online ? (
								<QuerySection status={statusResult.query} />
							) : (
								<ErrorSectionReplacer status={statusResult.query} />
							)}
						</Collapsible>
					</div>
				) : null
			}
		</div>
	</section>
</Layout>
