---
import Modal from "~/components/widgets/Modal.astro";

import type { Props as BaseProps } from "~/components/status/interfaces";
import Base from "~/components/status/Base.astro";

export type Props = BaseProps;

const { status }: Props = Astro.props;
---

{
	status.online ? (
		<Base nameValue="Players Online">
			<div class="grid grid-cols-2 grid-rows-1 items-center gap-4">
				<p>
					{status.players.online} / {status.players.max}
				</p>
				{status.players.list ? (
					<Modal>
						<div slot="button" class="interactive-box max-w-fit cursor-pointer p-2">
							<span class="font-bold">Show the list</span>
						</div>
						<div slot="value" class="grid grid-cols-1 gap-4">
							{status.players.list.map((player) => {
								const uuidOther = player.uuid.split("-");
								const uuidOne = uuidOther.splice(0, 1);

								return (
									<div class="sm:inline-flex">
										<a href={`https://mc-heads.net/user/${player.name}`}>
											<img
												src={`https://mc-heads.net/body/${player.name}`}
												class="w-12 sm:w-16 md:w-20"
												alt={`${player.name} skin`}
											/>
										</a>

										<div class="sm:inline-grid sm:content-center sm:pl-10 lg:text-lg">
											<a href={`https://namemc.com/search?q=${player.name}`}>
												<span class="font-bold">Name:</span>{" "}
												<span class="text-gray-700 dark:text-gray-100">{player.name}</span>
											</a>
											<br />
											<a class="text-gray-400" href={`https://namemc.com/search?q=${player.uuid}`}>
												<span class="font-bold">UUID:</span>
												<code class="inline-flex">
													{uuidOne}
													<span class="hidden min-[450px]:inline-block">-{uuidOther.join("-")}</span>
												</code>
											</a>
										</div>
									</div>
								);
							})}
						</div>
					</Modal>
				) : null}
			</div>
		</Base>
	) : null
}
