---
import { Icon } from "astro-icon";
import { FooterData } from "~/types";

export interface Props extends FooterData {}

const { socialLinks = [], footNote = "", theme = "light" }: FooterData = Astro.props;
---

<footer class:list={[{ dark: theme === "dark" }, "relative border-t border-gray-200 dark:border-slate-800"]}>
	<div class="pointer-events-none absolute inset-0 dark:bg-dark" aria-hidden="true"></div>
	<div class="relative mx-auto max-w-7xl px-4 dark:text-slate-300 sm:px-6">
		<div class="py-6 md:flex md:items-center md:justify-between md:py-8">
			{
				socialLinks.length ? (
					<ul class="-ml-2 mb-4 flex md:order-1 md:mb-0 md:ml-4">
						{socialLinks.map(({ ariaLabel, href, text, icon }) => (
							<li>
								<a
									class="inline-flex items-center rounded-lg p-2.5 text-sm text-muted hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-700"
									aria-label={ariaLabel}
									href={href}
								>
									{icon && <Icon name={icon} class="h-5 w-5" />}
									<Fragment set:html={text} />
								</a>
							</li>
						))}
					</ul>
				) : (
					""
				)
			}

			<div class="mr-4 text-sm dark:text-slate-400">
				<Fragment set:html={footNote} />
				<style is:inline>
					.link {
						@apply text-blue-600 hover:underline dark:text-gray-200;
					}
				</style>
			</div>
		</div>
	</div>
</footer>
