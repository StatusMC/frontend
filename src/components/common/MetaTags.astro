---
import { AstroSeo } from "@astrolib/seo";
import { getImage } from "@astrojs/image";

import { CONFIG } from "~/config.mjs";
import { MetaSEO } from "~/types";
import { getAsset } from "~/utils/permalinks";
import { getRelativeUrlByFilePath } from "~/utils/directories";

import CustomStyles from "~/components/CustomStyles.astro";

export interface Props extends MetaSEO {
	dontUseTitleTemplate?: boolean;
}

const defaultImage = CONFIG.defaultImage
	? (
			await getImage({
				src: CONFIG.defaultImage,
				alt: "Default image",
				width: 1200,
				height: 628,
			})
	  ).src
	: "";

const {
	title = CONFIG.title,
	description = CONFIG.description,
	image: _image = defaultImage,

	canonical = Astro.url,
	noindex = false,
	nofollow = false,

	ogTitle = title,
	ogType = "website",

	dontUseTitleTemplate = false,
} = Astro.props;

const image =
	typeof _image === "string"
		? new URL(_image, Astro.site)
		: _image && typeof _image["src"] !== "undefined"
		? // @ts-ignore
		  new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
		: null;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<AstroSeo
	title={title}
	titleTemplate={dontUseTitleTemplate ? "%s" : `%s â€” ${CONFIG.name}`}
	description={description}
	canonical={String(canonical)}
	noindex={noindex}
	nofollow={nofollow}
	openGraph={{
		url: String(canonical),
		title: ogTitle,
		description: description,
		type: ogType,
		images: image
			? [
					{
						url: image.toString(),
						alt: ogTitle,
					},
			  ]
			: undefined,
		// site_name: 'SiteName',
	}}
	twitter={{
		// handle: '@handle',
		// site: '@site',
		cardType: image ? "summary_large_image" : undefined,
	}}
/>

<CustomStyles />

<link rel="shortcut icon" href={getAsset("/favicon.ico")} />
<link rel="sitemap" href={getAsset("/sitemap-index.xml")} />
