---
import { AstroSeo } from "@astrolib/seo";
import { getImage } from "astro:assets";
import opengraphImage from "~/assets/images/opengraph-image.png";

import { CONFIG } from "~/config.mjs";
import { MetaSEO } from "~/types";
import { getAsset } from "~/utils/permalinks";
import { getRelativeUrlByFilePath } from "~/utils/directories";

import CustomStyles from "~/components/CustomStyles.astro";

export interface Props extends MetaSEO {
	dontUseTitleTemplate?: boolean;
}

const defaultOgImage = (await getImage({ src: opengraphImage, format: "webp" })).src;

const {
	title = CONFIG.title,
	description = CONFIG.description,
	favicon = getAsset("/favicon.ico"),

	canonical = Astro.url,
	noindex = false,
	nofollow = false,

	ogTitle = title,
	ogType = "website",
	ogImage: _ogImage = defaultOgImage,

	dontUseTitleTemplate = false,
} = Astro.props;

const ogImage =
	typeof _ogImage === "string"
		? new URL(_ogImage, Astro.site)
		: _ogImage && typeof _ogImage["src"] !== "undefined"
			? // @ts-ignore
				new URL(getRelativeUrlByFilePath(_ogImage.src), Astro.site)
			: null;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<AstroSeo
	title={title}
	titleTemplate={dontUseTitleTemplate ? "%s" : `%s â€” ${CONFIG.name}`}
	description={description}
	canonical={String(canonical)}
	noindex={noindex}
	nofollow={nofollow}
	openGraph={{
		url: String(canonical),
		title: ogTitle,
		description: description,
		type: ogType,
		images: ogImage
			? [
					{
						url: ogImage.toString(),
						alt: ogTitle,
					},
				]
			: undefined,
		// site_name: 'SiteName',
	}}
	twitter={{
		// handle: '@handle',
		// site: '@site',
		cardType: ogImage ? "summary_large_image" : undefined,
	}}
	additionalLinkTags={[
		{
			rel: "shortcut icon",
			href: favicon,
		},
		{
			rel: "sitemap",
			href: getAsset("/sitemap-index.xml"),
		},
	]}
/>

<CustomStyles />
